# 开发环境配置
server:
  port: 8082

spring:
  # 数据源配置 - 开发环境
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/campus_management_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&autoReconnect=true&failOverReadOnly=false&maxReconnects=3&useAffectedRows=true
    username: root
    password: xiaoxiao123
    driver-class-name: com.mysql.cj.jdbc.Driver
    
    # Druid 连接池配置
    druid:
      # 初始连接数
      initial-size: 10
      # 最小连接池数量
      min-idle: 2
      # 最大连接池数量
      max-active: 50
      # 配置获取连接等待超时的时间（减少到5秒）
      max-wait: 5000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 30000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 60000
      # 验证连接有效性的SQL
      validation-query: SELECT 1
      validation-query-timeout: 3
      test-while-idle: true
      test-on-borrow: true
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: false
      # 配置监控统计拦截的filters（移除wall过滤器避免问题）
      filters: stat,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
      # 连接超时配置
      query-timeout: 5
      transaction-query-timeout: 5
      # 自动提交配置
      default-auto-commit: true
      # 连接泄漏检测
      remove-abandoned: true
      remove-abandoned-timeout: 300
      log-abandoned: false
      # 连接错误重试
      connection-error-retry-attempts: 3
      break-after-acquire-failure: true

  # Redis 配置 - 开发环境
  redis:
    host: localhost
    port: 6379
    database: 0
    timeout: 3000ms
    lettuce:
      pool:
        max-active: 20
        max-wait: -1ms
        max-idle: 10
        min-idle: 5

  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 1800000  # 30分钟默认过期时间

  # 邮件配置 - 开发环境（使用测试邮箱）
  mail:
    host: smtp.qq.com
    port: 587
    username: test@qq.com
    password: test-password
    protocol: smtp
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # JPA配置 - 开发环境
  jpa:
    hibernate:
      ddl-auto: update  # 改回update，允许自动更新表结构
    show-sql: false  # 关闭SQL日志减少输出
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        # 查询超时配置
        query.timeout: 5000
        # 连接配置
        connection.provider_disables_autocommit: false  # 启用自动提交
        # 懒加载配置
        enable_lazy_load_no_trans: false
        # 事务配置
        current_session_context_class: thread
        # 连接释放模式
        connection.release_mode: after_transaction
    open-in-view: true  # 启用open-in-view解决懒加载问题

  # Quartz 配置 - 开发环境
  quartz:
    job-store-type: memory
    properties:
      org:
        quartz:
          threadPool:
            threadCount: 5
            threadPriority: 5
          scheduler:
            instanceName: CampusScheduler-Dev
            instanceId: AUTO

# MyBatis Plus 配置
mybatis-plus:
  configuration:
    # 开启驼峰命名转换
    map-underscore-to-camel-case: true
    # 开启二级缓存
    cache-enabled: true
    # 延迟加载
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    # 查询超时时间
    default-statement-timeout: 30
  global-config:
    db-config:
      # 逻辑删除配置
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      # ID 生成策略
      id-type: ASSIGN_ID

# JWT配置 - 开发环境
jwt:
  secret: campus-management-jwt-secret-key-dev-2024
  expiration: 7200000        # 2小时
  refresh-expiration: 604800000  # 7天
  header: Authorization
  prefix: Bearer
  redis:
    prefix: "jwt:token:"
    refresh-prefix: "jwt:refresh:"

# 日志配置 - 开发环境（减少输出）
logging:
  level:
    com.campus: INFO
    org.springframework: WARN
    org.springframework.security: WARN
    org.springframework.data: WARN
    org.springframework.cache: WARN
    org.springframework.boot: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    com.alibaba.druid: WARN
    org.apache.tomcat: WARN
    org.apache.catalina: WARN
    org.mybatis: WARN
    org.quartz: WARN
    io.lettuce: WARN
    root: WARN
  pattern:
    console: "%d{HH:mm:ss} %-5level %logger{20} - %msg%n"

# 管理端点配置 - 开发环境
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,redis,druid
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: smart-campus-management
      environment: dev



# 自定义配置
campus:
  # 缓存配置
  cache:
    # 课程信息缓存 - 30分钟
    course-ttl: 1800
    # 用户权限缓存 - 15分钟
    permission-ttl: 900
    # 系统配置缓存 - 1小时
    config-ttl: 3600
    # 学生信息缓存 - 30分钟
    student-ttl: 1800
    # 班级信息缓存 - 1小时
    class-ttl: 3600

  # 性能监控配置
  monitor:
    enabled: false  # 临时禁用监控
    redis-monitor-interval: 60000  # Redis监控间隔 1分钟
    performance-log: false  # 临时禁用性能日志

  # 邮件模板配置
  mail:
    template-path: classpath:/templates/email/
    from-name: 智慧校园管理系统
